{\rtf1\ansi\ansicpg1252\cocoartf946
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fswiss\fcharset0 Helvetica;\f2\froman\fcharset0 Times-Roman;
}
{\colortbl;\red255\green255\blue255;}
\vieww9000\viewh8400\viewkind0
\pard\tx0\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li1120\fi-1120\ql\qnatural

\f0\fs24 \cf0 Copyright \'a9 2005-2007 by Apple Computer, Inc.  All Rights Reserved.\
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li1120\fi-400\ri140\ql\qnatural

\f1\fs30 \cf0 \
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li1120\fi-400\ri140\ql\qnatural

\f0\b\fs48 \cf0 Quartz Composer Applications\
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li960\fi-20\ri140\ql\qnatural

\f2\b0\fs28 \cf0 \
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li960\fi-20\ri-2880\ql\qnatural

\f0\fs24 \cf0 This directory contains example applications that use the Quartz Composer API (part of the Quartz framework).\
\
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li960\fi-20\ri-1180\ql\qnatural
\cf0 \
\pard\tx960\tx5040\tx5760\tx6720\tx7680\tx8640\tx9600\li5040\fi-4100\ri-2880\ql\qnatural

\b \cf0 AnimatedCompositionLayer	
\b0 A basic application that demonstrates how to animate composition input parameters on a Core Animation composition layer through transactions.\
\

\b Chart	
\b0 A data application that uses a composition to render a 3D bar chart through a QCView.\
\

\b DesktopRenderer	
\b0 A simplified implementation of Overlay Composition used at WWDC 2007.\
\

\b Emblazed	
\b0 An application to create a composite folder icon made entirely out of a nib file and Cocoa bindings.\
\

\b ImageFX	
\b0 An application that demonstrates how to apply a visual effect from the Composition Repository to an image file and produce a new image file.\

\b \
ImageResizer	
\b0 A simple Quartz Composer application that leverages the Image Resizer composition from the Composition Repository.\
\

\b LiveEdit	
\b0 A simple RTF text editor that shows how to use a background Quartz composition with Core Animation and the Composition Repository.\
\

\b Matrix	
\b0 A demonstration on how to use a Quartz composition  in combination with QuickTime 7 APIs to display a movie as a series of frames in a 3D world.\
\

\b MiniBooth	
\b0 A very simplified Photo Booth that shows how to combine the Composition Repository with the Composition Loader patch, and how to save the QCView contents as a PNG image file.\
\

\b MovieFX (32bits only)	
\b0 An advanced example that demonstrates how to apply a visual effect from the Composition Repository to a QuickTime movie and produce a new movie.\
\

\b Offline	
\b0 A command-line tool that uses the QCRenderer API to render a Quartz composition offscreen on the video card using an OpenGL pBuffer, download the pixels data, then save the frames to disk as separate compressed TIFF files.\
\

\b OverlayComposition	
\b0 A background only application that renders a Quartz Composition in a floating transparent window on top of the desktop, and which only updates at a specified interval.\
\

\b ParameterView	
\b0 Demonstrates how to use the QCCompositionParameterView in combination with a QCView and the Composition Repository API.\
\

\b Performer	
\b0 An advanced sample code that puts together Quartz Composer and Core Video to lay out the foundation for a visual media mixer, which can handle Quartz compositions, QuickTime movies and static images.\
 \

\b Player	
\b0 A simple full-screen composition player that uses the QCRenderer API.\
 \

\b Poster	
\b0 Shows how to tile the rendering of a QCRenderer's composition by modifying appropriately the OpenGL projection matrix.\
\

\b QCTV (32bits only)	
\b0 This sample code shows how to design and build a fake TV system using Quartz Composer as the foundation motion graphics. The TV visuals are made by compositing several Quartz compositions whose parameters can be edited in real-time. The resulting graphics are displayed on screen and can also be exported in real-time to a QuickTime movie on disk, or as a FireWire DV stream. All the settings, including the composition input parameters, are saved / restored to the application's preferences.\
\

\b RepositoryBrowser	
\b0 Demonstrates how to use the Composition Picker in an application in combination with a QCView and a QCCompositionParameterView.\
\

\b SlideShow	
\b0 A slide show application based on the QCRenderer API that uses a custom composition or a composition from the Composition Repository to render the transitions.\
\

\b Texture	
\b0 An application that shows how to use the QCRenderer API to render a Quartz composition into an OpenGL pBuffer, then create a texture from it, and use the texture into another OpenGL scene.
\b\fs48 \
\pard\tx960\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li4300\fi-3360\ri-1180\ql\qnatural

\b0\fs24 \cf0 \
\
\
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li960\fi-20\ri-2880\ql\qnatural
\cf0 You may incorporate sample code from these examples into your applications without restriction, although the sample code has been provided "as is" and the responsibility for its operation is completely yours. However, you should not redistribute the source as "Apple Sample Code" if you make changes to it. If you're going to re-distribute the source, we require that you make it clear in the source that, although the code derived from Apple Sample Code,  you've since made changes to it.\
}